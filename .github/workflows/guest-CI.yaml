name: Guest CI

on:
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  guest-format-lint:
    runs-on: ubuntu-latest
#    env:
#      DJANGO_SETTINGS_MODULE: config.django.test
    steps:
      # 1. Ï†ÄÏû•ÏÜå Ï≤¥ÌÅ¨ÏïÑÏõÉ
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.OWNER_ACCESS_TOKEN }}
          submodules: true
          fetch-depth: 0

      # 2. ÌôòÍ≤Ω Î≥ÄÏàò ÌååÏùº ÏÉùÏÑ±
      - name: Create env file
        env:
          DJANGO_GUEST_ENV: ${{ secrets.DJANGO_GUEST_ENV }}
        run: |
          touch .env.guest
          echo "$DJANGO_GUEST_ENV" >> .env.guest

      # 3. Docker ÎπåÎìú
      - name: Build docker
        run: docker compose build postgres_db guest_service

      # 4. isort Ïã§Ìñâ (ÏΩîÎìú Ï†ïÎ†¨ Í≤ÄÏÇ¨)
      - name: Run isort
        run: docker compose run guest_service poetry run isort mung_manager/ --check

      # 5. black Ïã§Ìñâ (ÏΩîÎìú Ìè¨Îß§ÌåÖ Í≤ÄÏÇ¨)
      - name: Run black
        run: docker compose run guest_service poetry run black mung_manager/ --check

      # 6. flake8 Ïã§Ìñâ (ÏΩîÎìú Î¶∞ÌåÖ Í≤ÄÏÇ¨)
      - name: Run flake8
        run: docker compose run guest_service poetry run flake8

      # 7. mypy Ïã§Ìñâ (ÌÉÄÏûÖ Í≤ÄÏÇ¨)
#      - name: Run mypy
#        run: docker compose run guest_service poetry run mypy --config mypy.ini mung_manager/

      # 8. Slack ÏïåÎ¶º
      - name: Notify Slack on Success
        if: success()
        id: slack-success
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "channel": "${{ secrets.SLACK_CHANNEL_ID }}",
              "attachments": [
                {
                  "color": "#36a64f",
                  "title": "${{ github.repository }}",
                  "title_link": "https://github.com/${{ github.repository }}",
                  "text": "GitHub Action guest format-lint CI ÏÑ±Í≥µ üòÑ",
                  "fields": [
                    {
                      "title": "Repository",
                      "value": "${{ github.repository }}",
                      "short": true
                    },
                    {
                      "title": "Tag",
                      "value": "${{ github.ref_name }}",
                      "short": true
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Notify Slack on Failure
        if: failure()
        id: slack-failure
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "channel": "${{ secrets.SLACK_CHANNEL_ID }}",
              "attachments": [
                {
                  "color": "#ff0000",
                  "title": "${{ github.repository }}",
                  "title_link": "https://github.com/${{ github.repository }}",
                  "text": "GitHub Action guest format-lint CI Ïã§Ìå® üò≠",
                  "fields": [
                    {
                      "title": "Repository",
                      "value": "${{ github.repository }}",
                      "short": true
                    },
                    {
                      "title": "Tag",
                      "value": "${{ github.ref_name }}",
                      "short": true
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  #  @TODO: ÌÖåÏä§Ìä∏ job ÏÑ§Ï†ï
